
Load Balancer with HAProxy


HAProxy Server Setup: 
Operating System	:	CentOS 7
IP Address		: 	192.168.39.120
Hostname		: 	server.local.com

Client Web Servers Setup

Operating System	:	CentOS 7
IP Address		: 	192.168.39.121
Hostname		: 	client1.local.com


Operating System	:	CentOS 7
IP Address		: 	192.168.39.122
Hostname		: 	client2.local.com


Step 1: Installing Apache on Client Machines
# yum install httpd

Step 2: Installing HAProxy Server in server machine (192.168.39.120)
yum install haproxy openssl-devel

Step 3: Configure HAProxy
mv /etc/haproxy/haproxy.cfg /etc/haproxy/haproxy.cfg.org
#vim /etc/haproxy/haproxy.cfg

# create new
 global
      # for logging section
    log         127.0.0.1 local2 info
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
      # max per-process number of connections
    maxconn     256
      # process' user and group
    user        haproxy
    group       haproxy
      # makes the process fork into background
    daemon

defaults
      # running mode
    mode               http
      # use global settings
    log                global
      # get HTTP request log
    option             httplog
      # timeout if backends do not reply
    timeout connect    10s
      # timeout on client side
    timeout client     30s
      # timeout on server side
    timeout server     30s

# define frontend ( set any name for "http-in" section )
frontend http-in
      # listen 80
    bind *:80
      # set default backend
    default_backend    webservers
      # send X-Forwarded-For header
    option             forwardfor

# define backend
backend webservers
 # balance with roundrobin
    balance            roundrobin
      # define backend servers
    server             client1 192.168.39.121:80 client1 check
    server             client2 192.168.39.122:80 client2 check

#Reload the haproxy server
systemctl start haproxy 
systemctl enable haproxy

Step4 Configure Rsyslog to get logs for HAProxy.

#vi /etc/rsyslog.conf
# line 15,16: uncomment, lne 17: add
$ModLoad imudp
$UDPServerRun 514
$AllowedSender UDP, 127.0.0.1
# line 54: change like follows
*.info;mail.none;authpriv.none;cron.none,local2.none   /var/log/messages
 local2.*                                                /var/log/haproxy.log

#Restart the rsyslog
#systemctl restart rsyslog 

Step5: Change httpd settings on logging X-Forwarded-For header. (Client machines only)

vi /etc/httpd/conf/httpd.conf

# line 196: change like follows
LogFormat "\"%{X-Forwarded-For}i\" %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined

systemctl restart httpd

Verify HAProxy Load Balancer :
Time to access our loadbalancer url. put one html file in all client servers machines. create index.html file in all client servers in web server.

# Create index.html file in webserver document root
#cd /var/www/html
#vim index.html

and add the following content

 <html>
<body>
This is client1 page
</body>
</html>

After creating ‘index.html‘ file, now try to access the site and see whether I can able access the copied html file.

http://192.168.39.120/


Step6: Enabling SSL in HAProxy

To install mod_ssl run the following command
# yum install mod_ssl -y
Navigate to the SSL directory and create SSL certificate using following commands.

#cd /etc/ssl/
#openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/haproxy.key -out /etc/ssl/haproxy.crt

#cat haproxy.crt haproxy.key > haproxy.pem

Open and edit the haproxy configuration and add the SSL front-end as below.
# vim /etc/haproxy/haproxy.cfg

frontend htts-in
      # listen 80
    bind *:443 ssl crt /etc/ssl/haproxy.pem
      # set default backend
    default_backend    webservers
      # send X-Forwarded-For header
    option             forwardfor

Next, add the redirect rule in backend configuration.

redirect scheme https if !{ ssl_fc }

Restart the haproxy service.

#systemctl restart haproxy 


Open HAProxy Ports on Firewall

# firewall­cmd ­­permanent ­­zone=public ­­add­port=514/tcp
# firewall­cmd ­­permanent ­­zone=public ­­add­port=80/tcp
# firewall­cmd ­­permanent ­­zone=public ­­add­port=443/tcp
# firewall­cmd ­­reload 









